trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'

steps:

- task: AzureCLI@2
  displayName: Get Kubectl Credentials
  inputs:
    azureSubscription: azrm
    scriptType: bash
    scriptLocation: inlineScript
    inlineScript: az aks get-credentials --name census-k8s --resource-group Census

- task: AzureCLI@2
  displayName: Do ACR Login
  inputs:
    azureSubscription: azrm
    scriptType: bash
    scriptLocation: inlineScript
    inlineScript: az acr login --name hermanohub

- script: docker network create test && docker run -d -p 27017-27019:27017-27019 --net=test --name mongo mongo:latest
  displayName: Init Mongo Container

- script: docker run --name neo4j -p7474:7474 -p7687:7687 -d --net=test --env NEO4J_AUTH=neo4j/test neo4j:3.5
  displayName: Init Neo4j Container

- script: docker run -d --name rabbitmq -p 5672:5672 -p 15672:15672 --net=test rabbitmq:3-management
  displayName: Init RabbitMQ Container

- script: docker build --file ./src/microservices/People.Test.Dockerfile --tag people.test ./src/microservices
  displayName: Build Test Docker for People Microservice

- script: docker build --file ./src/microservices/Statistics.Test.Dockerfile --tag statistics.test ./src/microservices
  displayName: Build Test Docker for Statistics Microservice

- script: docker build --file ./src/microservices/FamilyTree.Test.Dockerfile --tag family.test ./src/microservices
  displayName: Build Test Docker for FamilyTree Microservice

- script: docker run --net=test people.test
  displayName: Test People Microservice

- script: docker run --net=test statistics.test
  displayName: Test Statistics Microservice

- script: docker run --net=test family.test
  displayName: Test FamilyTree Microservice

- script: docker build -f ./src/microservices/People.Dockerfile -t hermanohub.azurecr.io/census.people --build-arg prod="prod" ./src/microservices
  displayName: Build Docker for People Microservice

- script: docker build -f ./src/microservices/Statistics.Dockerfile -t hermanohub.azurecr.io/census.statistics --build-arg prod="prod" ./src/microservices
  displayName: Build Docker for Statistics Microservice

- script: docker build -f ./src/microservices/FamilyTree.Dockerfile -t hermanohub.azurecr.io/census.familytree --build-arg prod="prod" ./src/microservices
  displayName: Build Docker for FamilyTree Microservice

- script: docker build -f ./src/frontend/Census.WebApp/Dockerfile -t hermanohub.azurecr.io/census.front ./src/frontend/Census.WebApp
  displayName: Build Docker for Frontend

- script: docker push hermanohub.azurecr.io/census.people
  displayName: Push Docker for People Microservice

- script: docker push hermanohub.azurecr.io/census.statistics
  displayName: Push Docker for Statistics Microservice

- script: docker push hermanohub.azurecr.io/census.familytree
  displayName: Push Docker for Family Microservice

- script: docker push hermanohub.azurecr.io/census.front
  displayName: Push Docker for Frontend

- script: kubectl delete --ignore-not-found -f ./src/kubernetes/people.yaml && kubectl apply -f ./src/kubernetes/people.yaml
  displayName: Deploy People Microservice to Kubernetes Cluster

- script: kubectl delete --ignore-not-found -f ./src/kubernetes/statistics.yaml && kubectl apply -f ./src/kubernetes/statistics.yaml
  displayName: Deploy Statistics Microservice to Kubernetes Cluster

- script: kubectl delete --ignore-not-found -f ./src/kubernetes/family.yaml && kubectl apply -f ./src/kubernetes/family.yaml
  displayName: Deploy FamilyTree Microservice to Kubernetes Cluster

- script: kubectl delete --ignore-not-found -f ./src/kubernetes/front.yaml && kubectl apply -f ./src/kubernetes/front.yaml
  displayName: Deploy Frontend to Kubernetes Cluster
  
