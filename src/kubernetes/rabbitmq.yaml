apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-rabbitmq
spec:
  capacity:
    storage: 2Gi
  accessModes:
    - ReadWriteOnce
  storageClassName: "standard" 
  azureDisk:
    kind: Managed
    diskName: disk-rabbit
    diskURI: /subscriptions/ce8f4dd1-fbf7-4ddb-91dd-3edc900ff60e/resourceGroups/Census/providers/Microsoft.Compute/disks/disk-rabbit

---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: pvc-rabbitmq
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  volumeName: pv-rabbitmq
  storageClassName: "standard"
---
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq
spec:
  clusterIP: None
  ports:
  - name: epmd
    port: 4369
    protocol: TCP
    targetPort: 4369
  - name: cluster-links
    port: 25672
    protocol: TCP
    targetPort: 25672
  selector:
    app: rabbitmq-k8s
  type: ClusterIP
  sessionAffinity: None

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: rabbitmq-k8s
spec:
  selector:
    matchLabels:
      app: "rabbitmq-k8s"
  serviceName: rabbitmq 
  template:
    metadata:
      name: rabbitmq-k8s
      labels:
        app: rabbitmq-k8s
    spec:
      initContainers:
      volumes:
      - name: rabbitmq-data
        persistentVolumeClaim:
          claimName: pvc-rabbitmq
      securityContext:
        fsGroup: 999
        runAsUser: 999
        runAsGroup: 999
      containers:
      - name: rabbitmq-k8s
        # Community Docker Image
        image: rabbitmq:latest
        volumeMounts:
        # rabbitmq data directory
        - name: rabbitmq-data
          mountPath: "/var/lib/rabbitmq/mnesia"
        env:
        - name: RABBITMQ_DEFAULT_PASS
          value: guest
        - name: RABBITMQ_DEFAULT_USER
          value: guest
        ports:
        - name: amqp
          containerPort: 5672
          protocol: TCP
        - name: management
          containerPort: 15672
          protocol: TCP
        - name: prometheus
          containerPort: 15692
          protocol: TCP
        - name: epmd
          containerPort: 4369
          protocol: TCP
        livenessProbe:
          exec:
            # This is just an example. There is no "one true health check" but rather
            # several rabbitmq-diagnostics commands that can be combined to form increasingly comprehensive
            # and intrusive health checks.
            # Learn more at https://www.rabbitmq.com/monitoring.html#health-checks.
            #
            # Stage 2 check:
            command: ["rabbitmq-diagnostics", "status"]
          initialDelaySeconds: 60
          # See https://www.rabbitmq.com/monitoring.html for monitoring frequency recommendations.
          periodSeconds: 60
          timeoutSeconds: 15
        readinessProbe: # probe to know when RMQ is ready to accept traffic
          exec:
            # This is just an example. There is no "one true health check" but rather
            # several rabbitmq-diagnostics commands that can be combined to form increasingly comprehensive
            # and intrusive health checks.
            # Learn more at https://www.rabbitmq.com/monitoring.html#health-checks.
            #
            # Stage 1 check:
            command: ["rabbitmq-diagnostics", "ping"]
          initialDelaySeconds: 20
          periodSeconds: 60
          timeoutSeconds: 10


